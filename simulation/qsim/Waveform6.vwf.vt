// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/31/2023 20:02:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          pbl_test
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module pbl_test_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [1:0] B0;
reg [1:0] B1;
reg [3:0] HH0;
reg [3:0] HH1;
// wires                                               
wire FI0;
wire [6:0] P0_and_F0;
wire [6:0] P1_and_F1;
wire SEL0;
wire SEL1;
wire SINAL_MUX_TERMINAL_LEDS;
wire SINAL_MUX_TERMINAL_MATRIZ;

// assign statements (if any)                          
pbl_test i1 (
// port map - connection between master ports and signals/registers   
	.B0(B0),
	.B1(B1),
	.FI0(FI0),
	.HH0(HH0),
	.HH1(HH1),
	.P0_and_F0(P0_and_F0),
	.P1_and_F1(P1_and_F1),
	.SEL0(SEL0),
	.SEL1(SEL1),
	.SINAL_MUX_TERMINAL_LEDS(SINAL_MUX_TERMINAL_LEDS),
	.SINAL_MUX_TERMINAL_MATRIZ(SINAL_MUX_TERMINAL_MATRIZ)
);
initial 
begin 
#80000 $finish;
end 
// B0[ 1 ]
initial
begin
	B0[1] = 1'b1;
	B0[1] = #40000 1'b0;
end 
// B0[ 0 ]
initial
begin
	B0[0] = 1'b1;
	B0[0] = #40000 1'b0;
end 
// B1[ 1 ]
initial
begin
	B1[1] = 1'b0;
end 
// B1[ 0 ]
initial
begin
	B1[0] = 1'b0;
end 
// HH0[ 3 ]
initial
begin
	HH0[3] = 1'b0;
	HH0[3] = #20000 1'b1;
	HH0[3] = #20000 1'b0;
end 
// HH0[ 2 ]
initial
begin
	HH0[2] = 1'b0;
	HH0[2] = #10000 1'b1;
	HH0[2] = #10000 1'b0;
	HH0[2] = #10000 1'b1;
	HH0[2] = #10000 1'b0;
end 
// HH0[ 1 ]
initial
begin
	HH0[1] = 1'b1;
	HH0[1] = #30000 1'b0;
end 
// HH0[ 0 ]
initial
begin
	HH0[0] = 1'b1;
	HH0[0] = #40000 1'b0;
end 
// HH1[ 3 ]
initial
begin
	HH1[3] = 1'b0;
end 
// HH1[ 2 ]
initial
begin
	HH1[2] = 1'b0;
end 
// HH1[ 1 ]
initial
begin
	HH1[1] = 1'b0;
end 
// HH1[ 0 ]
initial
begin
	HH1[0] = 1'b0;
end 
endmodule

